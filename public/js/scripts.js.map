{"version":3,"sources":["scripts.js"],"names":["WebcamCanvas","canvas","_classCallCheck","this","ctx","getContext","window","addEventListener","resizeCanvas","height","innerHeight","width","draw","_this","video","document","createElement","navigator","innerWidth","audio","then","srcObject","play","_this2","fillStyle","requestAnimationFrame","stream","media","cw","ch","cr","iw","ih","w","h","x","y","videoHeight","videoWidth"],"mappings":"6XAEMA,aAAAA,WACL,QAAAA,GAAYC,GAAQC,gBAAAC,KAAAH,GACnBG,KAAKF,OAASA,EAJhBE,KAAAC,IAAAD,KAAAF,OAAAI,WAAA,MAQEF,KANIH,eACLM,OAAAC,iBAAYN,OAAQE,KAAAK,cAAAF,OAAAC,iBAAA,SAAAJ,KAAAK,cACnBL,KAAKF,kBAELE,KAAKC,mEAILE,GAAAA,GAAOC,OAAAA,WASDE,EAASH,OAAOI,WAEtBP,MAAKF,OAAOU,MAAQA,EAPpBR,KAAKS,OAALH,OAAAA,4CAWiB,GAAAI,GAAAV,IACjBA,MAAKW,MAAQC,SAASC,cAAc,SARpCC,UAAMN,aAAeO,cACrBC,OAAMV,EAWLK,OAAO,IATRM,KAAKnB,SAAAA,GACLY,EAAKZ,MAALoB,UAAqBZ,EACrBI,EAAAC,MAAAQ,wCAEiB,GAAAC,GAAApB,IAajBA,MAAKC,IAAIoB,UAAY,OAZrBrB,KAAAC,IAAKU,SAAQC,EAAAA,EAASC,KAAAA,OAATL,MAAuBR,KAApCF,OAAAQ,QAEAQ,KAAAA,OACCE,KAAAA,eADmChB,KAAAW,OAInCR,OAAAmB,sBAAuBC,WACvBH,EAAAX,gDAiBae,GACd,GAAMC,GAAKzB,KAAKC,IAAIH,OAddU,MAAAkB,EAAA1B,KAAAC,IAAAH,OAAAQ,OAgBAqB,EAAKF,EAAKC,EAfhBE,EAAAA,OACAC,EAAAA,OAiBIC,EAAAA,OAfJC,EAAAA,OACCC,EAAAA,OACAC,EAAAA,MAEMX,WAAPnB,EAAOmB,SACNM,EAAAJ,EAAKf,WACLoB,EAFDL,EAAAU,cAoBCN,EAAKJ,EAAMhB,MACXqB,EAAKL,EAAMlB,OAdZ,IAAMoB,GAAKE,EAAK3B,CAEhB0B,IAAIC,GACJE,EAAID,EACJE,EAAID,EAAAA,EAAJD,EACAG,EAAID,EACJE,GAAID,EAAAA,GAAJ,IAmBCF,EAAKJ,EAAKG,EAAMD,EAhBjBG,EAAIP,EACHI,GAAAA,EAAKJ,GAAMW,EACXN,EAAAA,GAGAA,KAAAA,IAAKL,UAALA,EAAAQ,EAAAC,EAAAH,EAAAC","file":"scripts.js","sourcesContent":["/* exported WebcamCanvas */\n\nclass WebcamCanvas {\n\tconstructor(canvas) {\n\t\tthis.canvas = canvas;\n\n\t\tthis.ctx = this.canvas.getContext('2d');\n\n\t\tthis.resizeCanvas();\n\t\twindow.addEventListener('load', this.resizeCanvas);\n\t\twindow.addEventListener('resize', this.resizeCanvas);\n\n\t\tthis.initialiseVideo();\n\n\t\tthis.draw();\n\t}\n\n\tresizeCanvas() {\n\t\tconst width = window.innerWidth;\n\t\tconst height = window.innerHeight;\n\n\t\tthis.canvas.width = width;\n\t\tthis.canvas.height = height;\n\t}\n\n\tinitialiseVideo() {\n\t\tthis.video = document.createElement('VIDEO');\n\n\t\tnavigator.mediaDevices.getUserMedia({\n\t\t\taudio: false,\n\t\t\tvideo: true\n\t\t}).then((stream) => {\n\t\t\tthis.video.srcObject = stream;\n\t\t\tthis.video.play();\n\t\t});\n\t}\n\n\tdraw() {\n\t\tthis.ctx.fillStyle = '#000';\n\t\tthis.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n\t\tif (this.video) {\n\t\t\tthis.drawMediaCover(this.video);\n\t\t}\n\n\t\twindow.requestAnimationFrame(() => {\n\t\t\tthis.draw();\n\t\t});\n\t}\n\n\tdrawMediaCover(media) {\n\t\tconst cw = this.ctx.canvas.width;\n\t\tconst ch = this.ctx.canvas.height;\n\t\tconst cr = cw / ch;\n\t\tlet iw;\n\t\tlet ih;\n\t\tlet w;\n\t\tlet h;\n\t\tlet x;\n\t\tlet y;\n\n\t\tif (media.tagName === 'VIDEO') {\n\t\t\tiw = media.videoWidth;\n\t\t\tih = media.videoHeight;\n\t\t} else {\n\t\t\tiw = media.width;\n\t\t\tih = media.height;\n\t\t}\n\n\t\tconst ir = iw / ih;\n\n\t\tif (cr >= ir) {\n\t\t\tw = cw;\n\t\t\th = (cw / iw) * ih;\n\t\t\tx = 0;\n\t\t\ty = (ch - h) / 2;\n\t\t} else {\n\t\t\tw = (ch / ih) * iw;\n\t\t\th = ch;\n\t\t\tx = (cw - w) / 2;\n\t\t\ty = 0;\n\t\t}\n\n\t\tthis.ctx.drawImage(media, x, y, w, h);\n\t}\n}\n"]}